name: Deploy Next.js to S3 with Terraform

on:
  push:
    branches:
      - main
      - feat/userdata-script

jobs:
  build:
    name: Build Next.js
    runs-on: ubuntu-latest

    env:
      NEXT_APP_DIR: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: ${{ env.NEXT_APP_DIR }}
        run: npm ci

      - name: Build and Export Next.js app
        working-directory: ${{ env.NEXT_APP_DIR }}
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/out/
          retention-days: 1

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: build

    env:
      AWS_REGION: ap-south-1
      TF_WORKING_DIR: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/out

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Import existing bucket
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform import aws_s3_bucket.my_bucket terraform-mentoring-bucket || true

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -var "public_key=${{ secrets.EC2_PUBLIC_KEY }}"

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve -var "public_key=${{ secrets.EC2_PUBLIC_KEY }}"
